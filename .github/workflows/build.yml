name: Build
on:
  workflow_call:
    inputs:
      repository:
        description: Repository to clone and build
        type: string
        default: athasdev/athas
      ref:
        description: Branch/tag/ref to build
        type: string
        required: true
  workflow_dispatch:
    inputs:
      repository:
        description: Repository to clone and build
        type: string
        default: athasdev/athas
      ref:
        description: Branch/tag/ref to build
        type: string
        default: master

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Athas
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: athas
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install Rust dependencies
        run: |
          rustup target add x86_64-pc-windows-msvc
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            athas/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('athas/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('athas/**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Override Tauri config
        working-directory: ./athas/src-tauri
        shell: pwsh
        run: |
          Copy-Item "tauri.conf.json" "tauri.conf.json.backup"
          $t_conf = Get-Content "tauri.conf.json" -Raw | ConvertFrom-Json
          $t_conf.plugins.updater.pubkey = "${{ secrets.TAURI_SIGNING_PUBLIC_KEY }}"
          $t_conf | ConvertTo-Json -Depth 100 | Set-Content "tauri.conf.json"
      - name: Install frontend dependencies
        working-directory: ./athas
        run: bun install
      - name: Build Tauri application
        working-directory: ./athas
        run: bun run tauri build
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-windows-${{ inputs.ref }}
          path: |
            athas/target/release/bundle/msi/*.msi
            athas/target/release/bundle/nsis/*.exe
          retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Athas
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          path: athas
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Install Rust dependencies
        run: |
          rustup target add x86_64-unknown-linux-gnu
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            athas/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('athas/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('athas/**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Override Tauri config
        working-directory: ./athas/src-tauri
        shell: bash
        run: |
          cp tauri.conf.json tauri.conf.json.backup
          cat tauri.conf.json | jq '.plugins.updater.pubkey = "${{ secrets.TAURI_SIGNING_PUBLIC_KEY || "" }}"' > tauri.conf.json.tmp
          mv tauri.conf.json.tmp tauri.conf.json
      - name: Install frontend dependencies
        working-directory: ./athas
        run: bun install
      - name: Build Tauri application
        working-directory: ./athas
        run: bun run tauri build
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-linux-${{ inputs.ref }}
          path: |
            athas/target/release/bundle/deb/*.deb
            athas/target/release/bundle/rpm/*.rpm
            athas/target/release/bundle/appimage/*.AppImage
          retention-days: 30
